[{"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\index.js":"1","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\App.js":"2","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\index.js":"3","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Profile.js":"4","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Tickets\\Ticket.js":"5","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Bingo\\Bingo.js":"6","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Footer\\Footer.js":"7","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Statistic\\Statistic.js":"8","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\SignUp.js":"9","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Signin.js":"10","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Navigation\\Navigation.js":"11","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\reducer.js":"12","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\API.js":"13","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Proba\\Proba.js":"14","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Bingo\\Ticket\\Ticket.js":"15","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Bingo\\NumberToSelect\\NumberToSelect.js":"16","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\auth\\action.js":"17","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\auth\\reducer.js":"18","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\game\\reducer.js":"19","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\tikcets\\reducer.js":"20","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\tikcets\\action.js":"21","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\game\\action.js":"22","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\auth\\type.js":"23","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\tikcets\\type.js":"24","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\game\\type.js":"25","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Signout.js":"26","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\EmailConfirm\\EmailConfirm.js":"27"},{"size":336,"mtime":1611934555204,"results":"28","hashOfConfig":"29"},{"size":1382,"mtime":1612443857358,"results":"30","hashOfConfig":"29"},{"size":308,"mtime":1612393016348,"results":"31","hashOfConfig":"29"},{"size":557,"mtime":1614688481684,"results":"32","hashOfConfig":"29"},{"size":1013,"mtime":1614943820744,"results":"33","hashOfConfig":"29"},{"size":961,"mtime":1612971226518,"results":"34","hashOfConfig":"29"},{"size":205,"mtime":1610804758795,"results":"35","hashOfConfig":"29"},{"size":191,"mtime":1610804238459,"results":"36","hashOfConfig":"29"},{"size":2877,"mtime":1612880563220,"results":"37","hashOfConfig":"29"},{"size":2023,"mtime":1612462936281,"results":"38","hashOfConfig":"29"},{"size":2961,"mtime":1612448015011,"results":"39","hashOfConfig":"29"},{"size":319,"mtime":1611772507524,"results":"40","hashOfConfig":"29"},{"size":633,"mtime":1612276153485,"results":"41","hashOfConfig":"29"},{"size":3423,"mtime":1613131272052,"results":"42","hashOfConfig":"29"},{"size":2001,"mtime":1613137536155,"results":"43","hashOfConfig":"29"},{"size":1801,"mtime":1613137027936,"results":"44","hashOfConfig":"29"},{"size":5205,"mtime":1612880771964,"results":"45","hashOfConfig":"29"},{"size":2975,"mtime":1612958112796,"results":"46","hashOfConfig":"29"},{"size":1301,"mtime":1612389286290,"results":"47","hashOfConfig":"29"},{"size":2056,"mtime":1614940563372,"results":"48","hashOfConfig":"29"},{"size":2511,"mtime":1614690245375,"results":"49","hashOfConfig":"29"},{"size":981,"mtime":1612389312267,"results":"50","hashOfConfig":"29"},{"size":1129,"mtime":1612455853340,"results":"51","hashOfConfig":"29"},{"size":691,"mtime":1613136350674,"results":"52","hashOfConfig":"29"},{"size":200,"mtime":1611756424452,"results":"53","hashOfConfig":"29"},{"size":655,"mtime":1612271777062,"results":"54","hashOfConfig":"29"},{"size":734,"mtime":1612880145114,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1gtm6cd",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"58"},"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\index.js",[],["119","120"],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\App.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\index.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Profile.js",["121"],"import React, { Fragment, useState,useEffect } from 'react';\r\nimport API from \"../API\";\r\n\r\nexport default function Profile () {\r\n\r\n    const [redis, setRedis] = useState(null);\r\n\r\n    const getRedis = async () => {\r\n        const response = await API.get(\"/profile\");\r\n\r\n        setRedis(response.data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        getRedis();\r\n        console.log(redis)\r\n    },[]);\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n                {redis && JSON.stringify(redis)}\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Tickets\\Ticket.js",["122","123","124"],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Bingo\\Bingo.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Statistic\\Statistic.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\SignUp.js",["125"],"import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { Redirect } from \"react-router\";\r\nimport { signup } from \"../store/auth/action\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Signin() {\r\n\tconst dispatch = useDispatch();\r\n\tconst [userUsername, setUserUsername] = useState(null);\r\n\tconst [userEmail, setUserEmail] = useState(null);\r\n\tconst [userPassword, setUserPassword] = useState(null);\r\n\tconst [userPasswordConfirm, setUserPasswordConfirm] = useState(null);\r\n\t// let isSignedUp = useSelector((state) => state.auth.signedUp);\r\n\r\n\tconst handleUsernameChange = (e) => {\r\n\t\tsetUserUsername(e.target.value);\r\n\t};\r\n\r\n\tconst handleEmailChange = (e) => {\r\n\t\tsetUserEmail(e.target.value);\r\n\t};\r\n\r\n\tconst handlePasswordChange = (e) => {\r\n\t\tsetUserPassword(e.target.value);\r\n\t};\r\n\r\n\tconst handleSetUserPasswordConfirm = (e) => {\r\n\t\tsetUserPasswordConfirm(e.target.value);\r\n\t};\r\n\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(\r\n\t\t\tsignup({\r\n\t\t\t\tusername: userUsername,\r\n\t\t\t\temail: userEmail,\r\n\t\t\t\tpassword: userPassword,\r\n\t\t\t\tpasswordConfirm: userPasswordConfirm,\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='sign-in'>\r\n\t\t\t<div className='sign-in-content'>\r\n\t\t\t\t<div className='sign-in-logo'>\r\n\t\t\t\t\t<h1>Lucky Six / Sign Up</h1>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form className='sign-in-form' onSubmit={handleSubmit}>\r\n\t\t\t\t\t<div className='form-inputs'>\r\n\t\t\t\t\t\t<label for='inp' class='inp'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tid='inp'\r\n\t\t\t\t\t\t\t\tplaceholder='&nbsp;'\r\n\t\t\t\t\t\t\t\tonChange={handleUsernameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span class='label'>Username</span>\r\n\t\t\t\t\t\t\t<span class='focus-bg'></span>\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label for='inp' class='inp'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\t\tid='inp'\r\n\t\t\t\t\t\t\t\tplaceholder='&nbsp;'\r\n\t\t\t\t\t\t\t\tonChange={handleEmailChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span class='label'>Email</span>\r\n\t\t\t\t\t\t\t<span class='focus-bg'></span>\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label for='inp' class='inp'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tid='inp'\r\n\t\t\t\t\t\t\t\tplaceholder='&nbsp;'\r\n\t\t\t\t\t\t\t\tonChange={handlePasswordChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span class='label'>Password</span>\r\n\t\t\t\t\t\t\t<span class='focus-bg'></span>\r\n\t\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t\t<label for='inp' class='inp'>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\t\tid='inp'\r\n\t\t\t\t\t\t\t\tplaceholder='&nbsp;'\r\n\t\t\t\t\t\t\t\tonChange={handleSetUserPasswordConfirm}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<span class='label'>Password Confirm</span>\r\n\t\t\t\t\t\t\t<span class='focus-bg'></span>\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='sign-in-buttons'>\r\n\t\t\t\t\t<button type='submit' className='sign-in-form--button'>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<div style={{ alignItems: \"center\" }}>\r\n\t\t\t\t\t\tAlready have an account? <Link to=\"/sign-in\">Sign In</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Signin.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Navigation\\Navigation.js",["126"],"import React, {useEffect} from \"react\";\r\nimport {useLocation} from \"react-router\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {checkAuthState} from \"../../store/auth/action\";\r\nimport logo from '../Proba/numbers/22.png';\r\n// import Modal from 'react-modal';\r\n\r\nexport default function Navigation() {\r\n\r\n\r\n    // Modal.setAppElement('#root');\r\n\r\n    let pathname = useLocation().pathname;\r\n    const dispatch = useDispatch();\r\n\r\n    const isAuthenticated = useSelector((state) => state.auth.authenticated);\r\n    const isChecked = useSelector((state) => state.auth.checked);\r\n    // const [show, setShow] = useState(false);\r\n    // const [component, setComponent] = useState(false);\r\n\r\n    // const openModal = (e) => {\r\n    //     console.log(e.target.innerText);\r\n    //     setComponent(e.target.innerText)\r\n    //     setShow(true);\r\n    // }\r\n\r\n    // const closeModal = () => {\r\n    //     setShow(false);\r\n    // }\r\n\r\n\r\n    useEffect(() => {\r\n        if(!isChecked) {\r\n            dispatch(checkAuthState);\r\n        }\r\n    }, [pathname, isChecked]);\r\n\r\n    return (\r\n        <div className=\"navigation\">\r\n\r\n            <div className=\"logo\">\r\n                <img src={logo} alt=\"Logo\" width='40px' height='40px'/>\r\n            </div>\r\n\r\n            <div className=\"header-items\">\r\n\r\n                <div className=\"header-item header-logo\"/>\r\n                <div className=\"header-item header-menu\"/>\r\n\r\n\r\n                {isAuthenticated ? (\r\n                    <div className='navigation-links'>\r\n                        <Link to=\"/\" className={(pathname === \"/\") ? \"active-link\" : \"\"}>Bingo</Link>\r\n                        <Link to=\"/tickets\" className={(pathname === \"/tickets\") ? \"active-link\" : \"\"}>Tickets</Link>\r\n                        <Link to=\"/statistic\" className={(pathname === \"/statistic\") ? \"active-link\" : \"\"}>Statistic</Link>\r\n                        <Link to=\"/sign-out\" className={(pathname === \"/sign-out\") ? \"active-link\" : \"\"}>Sign Out</Link>\r\n                    </div>\r\n                ):(\r\n                    <div className='navigation-links'>\r\n                        <Link to=\"/sign-in\" className={(pathname === \"/sign-in\") ? \"active-link\" : \"\"}>Sign In</Link>\r\n                        <Link to=\"/sign-up\" className={(pathname === \"/sign-up\") ? \"active-link\" : \"\"}>Sign Up</Link>\r\n                        {/* <Modal\r\n                            overlayClassName='overlay-class'\r\n                            shouldCloseOnOverlayClick={true}\r\n                            className='modal-overlay'\r\n                            isOpen={show}\r\n                            onRequestClose={closeModal}\r\n                            contentLabel=\"example modal\">\r\n                                <FormsWrapper component={component} />\r\n                        </Modal> */}\r\n                    </div>\r\n                    )}\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\reducer.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\API.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Proba\\Proba.js",["127","128"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateGame } from \"../../store/game/action\";\r\n\r\nexport default function Proba() {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [numbers, setNumbers] = useState([]);\r\n\tconst [roundNumber, setRoundNumber] = useState(null);\r\n\tconst [luckyNumbersPosition, setLuckyNumbersPosition] = useState([]);\r\n\r\n\tconst values = [\r\n\t\t0,\r\n\t\t0,\r\n\t\t0,\r\n\t\t0,\r\n\t\t0,\r\n\t\t25000,\r\n\t\t15000,\r\n\t\t7500,\r\n\t\t3000,\r\n\t\t1250,\r\n\t\t700,\r\n\t\t350,\r\n\t\t250,\r\n\t\t175,\r\n\t\t125,\r\n\t\t100,\r\n\t\t90,\r\n\t\t80,\r\n\t\t70,\r\n\t\t60,\r\n\t\t50,\r\n\t\t35,\r\n\t\t25,\r\n\t\t20,\r\n\t\t15,\r\n\t\t12,\r\n\t\t10,\r\n\t\t8,\r\n\t\t7,\r\n\t\t6,\r\n\t\t5,\r\n\t\t4,\r\n\t\t3,\r\n\t\t2,\r\n\t\t1,\r\n\t];\r\n\r\n\tconst wss = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\twss.current = new WebSocket(\r\n\t\t\t\"wss://bingo-frontend-iku9k.ondigitalocean.app/bingo-websocket\"\r\n\t\t);\r\n\t\twss.current.onopen = () => console.log(\"ws opened\");\r\n\t\twss.current.onclose = () => console.log(\"ws closed\");\r\n\r\n\t\treturn () => {\r\n\t\t\twss.current.close();\r\n\t\t};\r\n\t}, []);\r\n\r\n\t\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!wss.current) return;\r\n\t\twss.current.onmessage = (e) => {\r\n\t\t\tconst message = JSON.parse(e.data);\r\n\r\n\t\t\tsetNumbers(message.numbers);\r\n\t\t\tsetRoundNumber(message.id);\r\n\t\t\tsetLuckyNumbersPosition(message.luckyNumbersPosition);\r\n        };\r\n        \r\n        dispatch(\r\n            updateGame({\r\n                gameNumbers: numbers,\r\n                luckyNumbersPosition: luckyNumbersPosition,\r\n                currentRoundId: roundNumber,\r\n            })\r\n        );\r\n\t}, [numbers]);\r\n\r\n\treturn (\r\n\t\t<div className='grid-container-drum'>\r\n\t\t\t<div className='header-drum'>\r\n\t\t\t\t<h1> Lucky 6</h1>\r\n\t\t\t\t<div>Round: {roundNumber} </div>\r\n\t\t\t</div>\r\n\t\t\t{numbers && numbers.length === 0 ? (\r\n\t\t\t\t<div className='lastRoundNumbers'>\r\n\t\t\t\t\t{/* iz api poziva rezultati za prethodno kolo */}\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<div className='drum' key={numbers[numbers.length - 1]}>\r\n\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\tclassName='ball-animation'\r\n\t\t\t\t\t\t\tkey={numbers[numbers.length - 1]}\r\n\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\tnumbers &&\r\n\t\t\t\t\t\t\t\t`./numbers/${numbers[numbers.length - 1]}.png`\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\talt={numbers[numbers.length - 1]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{values &&\r\n\t\t\t\t\t\tvalues.map((value, key) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\tkey < 5\r\n\t\t\t\t\t\t\t\t\t\t\t? `gold-ring-${key}`\r\n\t\t\t\t\t\t\t\t\t\t\t: \"number-div silver-ring\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{luckyNumbersPosition &&\r\n\t\t\t\t\t\t\t\t\t\tluckyNumbersPosition.map((luckyNum) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (luckyNum === key) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='div-lucky-number-position' />\r\n\t\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t<div key={key}>\r\n\t\t\t\t\t\t\t\t\t\t{numbers && numbers[key] ? (\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={numbers[key]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnumbers.length === key + 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t? numbers &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  `./numbers/ball.png`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t: numbers &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  `./numbers/${numbers[key]}.png`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={key}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tkey={numbers[key]}\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tnumbers &&\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t`./numbers/ball.png`\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\talt={key}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t\t<div className='odds'>\r\n\t\t\t\t\t\t\t\t\t\t{value !== 0 && value}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n}\r\n","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Bingo\\Ticket\\Ticket.js",["129","130"],"import React, { Fragment, useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { createTicket, updateTicket, getTickets, resetTicket } from \"../../../store/tikcets/action\";\r\n\r\nexport default function Ticket() {\r\n\tconst dispatch = useDispatch();\r\n\tconst ticketNum = useSelector((state) => state.ticket.ticketNumbers);\r\n\tconst roundIdNum = useSelector((state) => state.ticket.roundId);\r\n\tconst gameNumbers = useSelector((state) => state.game.gameNumbers);\r\n\tconst stake = useSelector((state) => state.ticket.stake);\r\n\r\n\tconst handleStakeChange = (e) => {\r\n\t\te.preventDefault();\r\n\t\tdispatch(\r\n\t\t\tupdateTicket({\r\n\t\t\t\tstake: e.target.value,\r\n\t\t\t})\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleCreateTicket = () => {\r\n\r\n\t\tdispatch(\r\n\t\t\tcreateTicket({\r\n\t\t\t\tticketNumbers: ticketNum,\r\n\t\t\t\tstake: stake,\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tdispatch(resetTicket);\r\n\r\n\t\tlet single = document.querySelectorAll(\".number-to-select-single\");\r\n\t\tfor( let sing of single ){\r\n\t\t\tsing.classList.remove(\"selected\");\r\n\t\t}\r\n\r\n\t\tdispatch(getTickets());\r\n\t\t\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<div className='ticket-header'>\r\n\t\t\t\t<div className='ticket-header-round'> Round: {roundIdNum} </div>\r\n\t\t\t\t<div className='ticket-header-time'> Time: 05:00 </div>\r\n\t\t\t</div>\r\n\t\t\t<div className='ticket-info'>\r\n\t\t\t\t<div className='ticket-info-selected-numbers'>\r\n\t\t\t\t\t{ticketNum &&\r\n\t\t\t\t\t\tticketNum.map((num) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\t\t\t\tgameNumbers.includes(num)\r\n\t\t\t\t\t\t\t\t\t\t\t? \"ticket-info-selected-number red\"\r\n\t\t\t\t\t\t\t\t\t\t\t: \"ticket-info-selected-number\"\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{num}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='ticket-info-ticket-odds'>\r\n\t\t\t\t\t<input onChange={handleStakeChange} placeholder='Ulog' value={stake ? stake : ''}/>\r\n\t\t\t\t\t<button onClick={handleCreateTicket} disabled={ticketNum && ticketNum.length === 6 && stake > 9 && stake < 1001 ? false: true }> UPLATI </button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</Fragment>\r\n\t);\r\n}\r\n","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Bingo\\NumberToSelect\\NumberToSelect.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\auth\\action.js",["131"],"import * as actionType from \"./type\";\r\nimport API from \"../../API\";\r\nimport toast from 'react-hot-toast';\r\n// import { browserHistory } from 'react-router'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nexport const checkAuthState = async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: actionType.CHECKING_AUTH_STATE_BEGINS,\r\n\t\t});\r\n\r\n\t\tconst csrf = localStorage.getItem(\"csrf\");\r\n\r\n\t\tif (csrf) {\r\n            const response = await API.get(\"/get-user\");\r\n            \r\n\t\t\tdispatch({\r\n\t\t\t\ttype: actionType.CHECKING_AUTH_STATE_SUCCESS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tauthenticated: response.data.authenticated,\r\n\t\t\t\t\tusername: response.data.username,\r\n\t\t\t\t\tcsrf: response.data.csrf,\r\n\t\t\t\t\tconfirmed: response.data.confirmed,\r\n\t\t\t\t\trole: response.data.role,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: actionType.CHECKING_AUTH_STATE_SUCCESS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tauthenticated: false,\r\n\t\t\t\t\tusername: null,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t} catch (e) {\r\n\t\tlet error;\r\n\t\tif (e.response) {\r\n\t\t\terror = e.response.data.message;\r\n\t\t\tif (e.response.data.code === 401) {\r\n\t\t\t\tlocalStorage.removeItem(\"csrf\");\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\terror = \"Server is down\";\r\n\t\t}\r\n\t\ttoast.error(error);\r\n\t\tdispatch({\r\n\t\t\ttype: actionType.CHECKING_AUTH_STATE_FAILURE,\r\n\t\t\tpayload: error,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const signup = (formProps) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: actionType.SIGNUP_BEGINS,\r\n\t\t});\r\n\r\n\t\tconst response = await API.post(\"/sign-up\", formProps);\r\n\r\n\t\tconsole.log(response);\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionType.SIGNUP_SUCCESS,\r\n\t\t\tpayload: {\r\n\t\t\t\tmessage: response.data\r\n\t\t\t},\r\n\t\t});\r\n\t\t\r\n\t\ttoast.success(response.data);\r\n\t\tuseHistory.push('/sign-in');\r\n\t} catch (err) {\r\n\r\n\t\tlet error;\r\n\t\tif (err.response) {\r\n\t\t\terror = err.response.data.message;\r\n\t\t} else {\r\n\t\t\terror = \"Server is down\";\r\n\t\t}\r\n\t\ttoast.error(error);\r\n\t}\r\n};\r\n\r\nexport const resendEmailToken = (email) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: actionType.RESEND_EMAIL_BEGINS,\r\n\t\t});\r\n\t\t\r\n\t\tconst response = await API.post(\"/email-confirm\", email);\r\n\t\t\r\n\t\tconsole.log(response);\r\n\r\n\t\tdispatch({\r\n            type: actionType.RESEND_EMAIL_SUCCESS,\r\n            payload: {\r\n\t\t\t\temail: response.data.username,\r\n\t\t\t\temailToken: response.data.emailToken,\r\n            },\r\n\t\t});\r\n\t\t\r\n    } catch (err) {\r\n        let error;\r\n        if (err.response) {\r\n            error = err.response.data.message;\r\n        } else {\r\n\t\t\ttoast.error(error);\r\n            error = \"Server is down\";\r\n\t\t}\r\n\t\ttoast.error(error);\r\n\t\t\r\n\t\tdispatch({\r\n            type: actionType.RESEND_EMAIL_FAILURE,\r\n            payload: error,\r\n        });\r\n    }\r\n};\r\n\r\nexport const signin = (formProps) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: actionType.SIGNIN_BEGINS,\r\n\t\t});\r\n\t\t\r\n\t\tconst response = await API.post(\"/sign-in\", formProps);\r\n\t\tif ( response.data.csrf ){\r\n\t\t\tlocalStorage.setItem(\"csrf\", response.data.csrf);\r\n\t\t}\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionType.SIGNIN_SUCCESS,\r\n\t\t\tpayload: {\r\n\t\t\t\tauthenticated: response.data.authenticated,\r\n\t\t\t\tusername: response.data.username,\r\n\t\t\t\tcsrf: response.data.csrf,\r\n\t\t\t\trole: response.data.role,\r\n\t\t\t},\r\n\t\t});\r\n\t\tif (response.data.confirmed === false ){\r\n\r\n\t\t\t  toast((t) => (\r\n\t\t\t\t<span>\r\n\t\t\t\t  {/* Custom and <b>bold</b>\r\n\t\t\t\t  <button onClick={() => toast.dismiss(t.id)}>\r\n\t\t\t\t\tDismiss\r\n\t\t\t\t  </button> */}\r\n\t\t\t\t  Resend email confirmation link \r\n\t\t\t\t  <button onClick={() => {\r\n\t\t\t\t\t  \r\n\t\t\t\t\t  resendEmailToken(response.data.email)\r\n\r\n\t\t\t\t\t  }}>Resend Email</button>\r\n\t\t\t\t</span>\r\n\t\t\t  ));\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tlet error;\r\n\t\tif (err.response) {\r\n\t\t\terror = err.response.data.message;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\terror = \"Server is down\";\r\n\t\t}\r\n\t\ttoast.error(error);\r\n\t\tdispatch({\r\n\t\t\ttype: actionType.SIGNIN_FAILURE,\r\n\t\t\tpayload: error,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const signout = () => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: actionType.SIGNOUT_BEGINS,\r\n\t\t});\r\n\t\tconst response = await API.get(\"/sign-out\");\r\n\t\tlocalStorage.clear();\r\n\r\n\t\tdispatch({\r\n\t\t\ttype: actionType.SIGNOUT_SUCCESS,\r\n\t\t\tpayload: {\r\n\t\t\t\tchecked: true,\r\n\t\t\t\tusername: null,\r\n\t\t\t\tcsrf: null,\r\n\t\t\t\trole:null,\r\n\t\t\t\tauthenticated: false,\r\n\t\t\t},\r\n\t\t});\r\n\t} catch (err) {\r\n\t\tlet error;\r\n\t\tif (err.response) {\r\n\t\t\terror = err.response.data.message;\r\n\t\t} else {\r\n\t\t\terror = \"Server is down\";\r\n\t\t}\r\n\t\ttoast.error(error);\r\n\t\tdispatch({\r\n\t\t\ttype: actionType.SIGNOUT_FAILURE,\r\n\t\t\tpayload: error,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport const emailToken = (formProps) => async (dispatch) => {\r\n    try {\r\n\r\n        dispatch({\r\n            type: actionType.EMAIL_CONFIRM_BEGINS,\r\n        });\r\n\t\tconst response = await API.post(\"/email-confirm\", formProps);\r\n\r\n\t\tdispatch({\r\n            type: actionType.EMAIL_CONFIRM_SUCCESS,\r\n            payload: {\r\n                confirmed: response.data,\r\n            },\r\n\t\t});\r\n\t\ttoast.success(response.data);\r\n    } catch (err) {\r\n        let error;\r\n        if (err.response) {\r\n            error = err.response.data.message;\r\n        } else {\r\n\t\t\ttoast.error(error);\r\n            error = \"Server is down\";\r\n\t\t}\r\n\r\n\t\ttoast.error(error);\r\n\t\t\r\n\t\tdispatch({\r\n            type: actionType.EMAIL_CONFIRM_FAILURE,\r\n            payload: error,\r\n        });\r\n    }\r\n};\r\n\r\n","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\auth\\reducer.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\game\\reducer.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\tikcets\\reducer.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\tikcets\\action.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\game\\action.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\auth\\type.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\tikcets\\type.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\store\\game\\type.js",[],"C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\Signout.js",["132"],"import React, {useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { signout } from \"../store/auth/action\";\r\n\r\nconst Signout = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isAuthenticated = useSelector((state) => state.auth.authenticated)\r\n\r\n    console.log(isAuthenticated);\r\n\r\n    useEffect(() => {\r\n        if (isAuthenticated) {\r\n            dispatch(signout());\r\n        }\r\n    }, [isAuthenticated]);\r\n\r\n    return (\r\n        <div>\r\n            {!isAuthenticated && (<Redirect to={{ pathname: \"/\" }} />)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Signout;","C:\\Users\\nveljovic.ITHQ\\Desktop\\Projects\\bingo-backend\\client\\src\\components\\EmailConfirm\\EmailConfirm.js",["133"],"import React, { Fragment, useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { emailToken } from '../../store/auth/action';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nexport default function EmailConfirm () {\r\n    const dispatch = useDispatch();\r\n    \r\n    let {id} = useParams();\r\n    let isEmailConfirmed = useSelector((state) => state.auth.confirmed);\r\n    \r\n    useEffect(()=>{\r\n        dispatch(emailToken({\r\n            emailToken: id\r\n        }))\r\n    }, []);\r\n\r\n    console.log(isEmailConfirmed);\r\n\r\n    return (\r\n        <Fragment>\r\n            {isEmailConfirmed && (<Redirect to={{ pathname: \"/sign-in\" }} />)}\r\n        </Fragment>\r\n    )\r\n}",{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","severity":1,"message":"139","line":17,"column":7,"nodeType":"140","endLine":17,"endColumn":9,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":35},{"ruleId":"142","severity":1,"message":"146","line":10,"column":11,"nodeType":"144","messageId":"145","endLine":10,"endColumn":25},{"ruleId":"138","severity":1,"message":"147","line":17,"column":7,"nodeType":"140","endLine":17,"endColumn":9,"suggestions":"148"},{"ruleId":"142","severity":1,"message":"149","line":2,"column":23,"nodeType":"144","messageId":"145","endLine":2,"endColumn":34},{"ruleId":"138","severity":1,"message":"147","line":37,"column":8,"nodeType":"140","endLine":37,"endColumn":29,"suggestions":"150"},{"ruleId":"138","severity":1,"message":"151","line":83,"column":5,"nodeType":"140","endLine":83,"endColumn":14,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":120,"column":47,"nodeType":"155","messageId":"156","endLine":120,"endColumn":49},{"ruleId":"142","severity":1,"message":"157","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"143","line":1,"column":38,"nodeType":"144","messageId":"145","endLine":1,"endColumn":46},{"ruleId":"142","severity":1,"message":"158","line":180,"column":9,"nodeType":"144","messageId":"145","endLine":180,"endColumn":17},{"ruleId":"138","severity":1,"message":"147","line":17,"column":8,"nodeType":"140","endLine":17,"endColumn":25,"suggestions":"159"},{"ruleId":"138","severity":1,"message":"160","line":17,"column":8,"nodeType":"140","endLine":17,"endColumn":10,"suggestions":"161"},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'redis'. Either include it or remove the dependency array.","ArrayExpression",["164"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'displayTickets' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["165"],"'useSelector' is defined but never used.",["166"],"React Hook useEffect has missing dependencies: 'dispatch', 'luckyNumbersPosition', and 'roundNumber'. Either include them or remove the dependency array.",["167"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'response' is assigned a value but never used.",["168"],"React Hook useEffect has missing dependencies: 'dispatch' and 'id'. Either include them or remove the dependency array.",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},"Update the dependencies array to be: [redis]",{"range":"182","text":"183"},"Update the dependencies array to be: [dispatch]",{"range":"184","text":"185"},"Update the dependencies array to be: [pathname, isChecked, dispatch]",{"range":"186","text":"187"},"Update the dependencies array to be: [dispatch, luckyNumbersPosition, numbers, roundNumber]",{"range":"188","text":"189"},"Update the dependencies array to be: [dispatch, isAuthenticated]",{"range":"190","text":"191"},"Update the dependencies array to be: [dispatch, id]",{"range":"192","text":"193"},[393,395],"[redis]",[453,455],"[dispatch]",[1090,1111],"[pathname, isChecked, dispatch]",[1518,1527],"[dispatch, luckyNumbersPosition, numbers, roundNumber]",[477,494],"[dispatch, isAuthenticated]",[545,547],"[dispatch, id]"]